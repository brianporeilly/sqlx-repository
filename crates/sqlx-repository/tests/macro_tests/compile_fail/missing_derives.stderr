error[E0277]: the trait bound `for<'r> User: FromRow<'r, PgRow>` is not satisfied
 --> tests/macro_tests/compile_fail/missing_derives.rs:6:10
  |
6 | #[derive(Repository)]
  |          ^^^^^^^^^^ the trait `for<'r> FromRow<'r, PgRow>` is not implemented for `User`
  |
  = help: the following other types implement trait `FromRow<'r, R>`:
            ()
            (T1, T2)
            (T1, T2, T3)
            (T1, T2, T3, T4)
            (T1, T2, T3, T4, T5)
            (T1, T2, T3, T4, T5, T6)
            (T1, T2, T3, T4, T5, T6, T7)
            (T1, T2, T3, T4, T5, T6, T7, T8)
          and $N others
note: required by a bound in `sqlx_repository::Repository`
 --> src/repository.rs
  |
  | pub trait Repository<T>: Send + Sync
  |           ---------- required by a bound in this trait
  | where
  |     T: for<'r> FromRow<'r, sqlx::postgres::PgRow> + Send + Unpin,
  |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `Repository`
  = note: this error originates in the derive macro `Repository` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `for<'r> User: FromRow<'r, PgRow>` is not satisfied
 --> tests/macro_tests/compile_fail/missing_derives.rs:6:10
  |
6 | #[derive(Repository)]
  |          ^^^^^^^^^^ the trait `for<'r> FromRow<'r, PgRow>` is not implemented for `User`
  |
  = help: the following other types implement trait `FromRow<'r, R>`:
            ()
            (T1, T2)
            (T1, T2, T3)
            (T1, T2, T3, T4)
            (T1, T2, T3, T4, T5)
            (T1, T2, T3, T4, T5, T6)
            (T1, T2, T3, T4, T5, T6, T7)
            (T1, T2, T3, T4, T5, T6, T7, T8)
          and $N others
note: required by a bound in `soft_delete_enabled`
 --> src/repository.rs
  |
  |     T: for<'r> FromRow<'r, sqlx::postgres::PgRow> + Send + Unpin,
  |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `Repository::soft_delete_enabled`
...
  |     fn soft_delete_enabled() -> bool {
  |        ------------------- required by a bound in this associated function
  = note: this error originates in the derive macro `Repository` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `for<'r> User: FromRow<'r, PgRow>` is not satisfied
 --> tests/macro_tests/compile_fail/missing_derives.rs:6:10
  |
6 | #[derive(Repository)]
  |          ^^^^^^^^^^ the trait `for<'r> FromRow<'r, PgRow>` is not implemented for `User`
  |
  = help: the following other types implement trait `FromRow<'r, R>`:
            ()
            (T1, T2)
            (T1, T2, T3)
            (T1, T2, T3, T4)
            (T1, T2, T3, T4, T5)
            (T1, T2, T3, T4, T5, T6)
            (T1, T2, T3, T4, T5, T6, T7)
            (T1, T2, T3, T4, T5, T6, T7, T8)
          and $N others
note: required by a bound in `find_by_id`
 --> src/repository.rs
  |
  |     T: for<'r> FromRow<'r, sqlx::postgres::PgRow> + Send + Unpin,
  |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `Repository::find_by_id`
...
  |     async fn find_by_id(&self, id: i32) -> RepositoryResult<Option<T>> {
  |              ---------- required by a bound in this associated function
  = note: this error originates in the derive macro `Repository` (in Nightly builds, run with -Z macro-backtrace for more info)
